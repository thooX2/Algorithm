문제
Contents
삽입정렬을 마스터한 소년 빌게이츠는 새로운 정렬법을 배웠다. 빌게이츠가 배운 방법은 다음과 같다.

1. A[1..k]에 대해서 1부터 k-1까지, A[i], A[i+1]에 대해서 비교를 하면서 A[i] > A[i+1]인 경우 맞바꾼다.

2. 배열의 크기가 n이라고 할 때, k = n 부터 k = 2 까지의 위 과정을 반복한다.

긴 설명은 필요 없이 1번에 대해서 교환 회수를 모두 세서 출력하면 된다. 버블정렬은 빌게이츠가 배운대로 구현되어야 한다. 

Input
첫 줄에는 정렬해야 하는 원소의 개수 n(1<=n<=10000)이 들어 온다. 

그 다음 줄에는 n개의 임의의 정수가 들어 온다. 

 

Output
오름차순으로 정렬할 때, 배열 내의 원소들 사이의 교환 회수를 출력한다.

 

Sample Input
10
0 7 1 6 7 7 6 6 5 4 
 
Sample Output
21

답안
#include <iostream>
 
using namespace std;
 
int cnt = 0;
int Array[10001];
 
void BubbleSort(int Array[], int number);
 
int main()
{
    int number;
    cin >> number;
    for (int i = 1; i <= number; i++)
    {
        cin >> Array[i];
    }
    BubbleSort(Array, number);
    cout << cnt << endl;
 
    //system("pause");
    return 0;
}
 
void BubbleSort(int Array[], int number)
{
    for (int last = number; last >= 2; last--)
    {
        bool sorted = true;
        for (int i = 1; i <= last - 1; i++)
        {
            if (Array[i] > Array[i + 1])
            {
                int temp = Array[i];
                Array[i] = Array[i + 1];
                Array[i + 1] = temp;
                sorted = false;
                cnt++;
            }
        }
        if (sorted == true)
        {
            return;
        }
    }
}